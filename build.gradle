buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.dipien:semantic-version-gradle-plugin:2.0.0"
    }
}

plugins {
    id 'java'
    id 'maven-publish'
}

group 'org.geovistory'

version = "0.5.13"
apply plugin: "com.dipien.semantic-version"


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.kafka:kafka-clients:3.4.0'
    implementation 'org.apache.kafka:connect-api:3.4.0'
    implementation 'org.apache.kafka:connect-json:3.4.0'
    implementation 'org.apache.jena:jena-arq:4.7.0'
    implementation 'org.apache.jena:jena-core:4.7.0'
    implementation 'org.apache.jena:jena-shaded-guava:4.7.0'
    implementation 'org.eclipse.jetty:jetty-client:11.0.14'

    // logging
    implementation 'org.slf4j:slf4j-simple:2.0.5'

    //testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'

    // Use assertj for testing.
    testImplementation 'org.assertj:assertj-core:3.24.2'

    testImplementation "org.mockito:mockito-core:5.2.0"
    testImplementation "org.mockito:mockito-junit-jupiter:5.2.0"

    // Use underscore for testing.
    testImplementation 'com.github.javadev:underscore:1.87'

    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    compileOnly "com.google.code.findbugs:annotations:3.0.1"
}

processResources {
    filesMatching('rdf-kafka-sink-connector-version.properties') {
        expand([version: version])
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/geovistory/rdf-kafka-sink-connector")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        register("jar", MavenPublication) {
            from(components["java"])
            pom {
                url.set("https://github.com/geovistory/rdf-kafka-sink-connector.git")
            }
        }
    }
}

task printVersionName {
    println 'v'+project.version
}

